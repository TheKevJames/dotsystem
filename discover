#!/usr/bin/env python3
import pathlib


HOME = pathlib.Path.home()
ROOT = pathlib.Path(__file__).parent / 'root' / '~'
FOLDERS = [
    '.config/gcloud/configurations',
    '.config/nvim',
    '.config/tmuxifier/layouts',
    '.config/zsh/dropins',
    '.local/bin',
]


def main() -> None:
    print('Discovering files in need of backup...')

    for folder in FOLDERS:
        # TODO: don't print when empty
        print()
        print(f'The following files in {folder} may be in need of backup:')

        for file in (HOME / folder).glob('**/*'):
            # TODO: filter out expected:
            #   .local/bin/git-standup (and other src builds -> local bins)
            #   .config/zsh/dropins/osx.zsh (and other m4 -> dorpped extension)
            if file.is_file() and not file.is_symlink():
                sourcefile = ROOT / file.relative_to(HOME)
                if not sourcefile.exists():
                    print(file)


if __name__ == '__main__':
    main()
