#!/usr/bin/env bash
set -euo pipefail

echo "Upgrading system packages..."
if which zypper >/dev/null; then
    sudo zypper refresh
    sudo zypper update
elif which port >/dev/null; then
    sudo port selfupdate
    sudo port upgrade outdated
elif which apt-get >/dev/null; then
    sudo apt-get update
    sudo apt-get upgrade
elif which dnf >/dev/null; then
    sudo dnf upgrade
else
    echo "ERROR: could not determine package manager."
    exit 1
fi

echo "Running post-upgrade steps..."
if which zypper >/dev/null; then
    :
elif which port >/dev/null; then
    which yabai && {
        sudo codesign -fs 'yabai-cert' /opt/local/bin/yabai

        # Grant sudo access for yabai
        echo "$(whoami) ALL=(root) NOPASSWD: sha256:$(shasum -a 256 "$(which yabai)") --load-sa" | sudo tee /etc/sudoers.d/yabai

        sudo yabai --load-sa
        yabai --restart-service
    }

    which skhd && {
        skhd --restart-service
    }
elif which apt-get >/dev/null; then
    :
elif which dnf >/dev/null; then
    :
else
    echo "ERROR: could not determine package manager."
    exit 1
fi

echo "Upgrading cargo packages..."
cargo-upgrade

echo "Upgrading pipx packages..."
pipx upgrade-all

echo "Upgrading gcloud components..."
gcloud components update

echo "Upgrading installed-from-source packages..."
for repo in $(git config -f ~/.config/dotsystem/packages --name-only --get-regexp 'git\..*' | cut -f2 -d.); do
    (
        cd "${XDG_SRC_HOME}/${repo}"
        git pull
        [[ "${repo}" == "git-standup" ]] && make install PREFIX="${XDG_BIN_HOME%/bin}"
    )
done

echo "Upgrading kubectl plugins..."
kubectl krew update
kubectl krew upgrade

echo "Upgrading neovim plugins..."
nvim -c ':PlugUpgrade' -c ':PlugUpdate' -c 'qa!'

echo "Upgrading ngrok..."
sudo ngrok update

echo "done."
