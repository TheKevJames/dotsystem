#!/bin/bash
# ARG_OPTIONAL_BOOLEAN([chdir],[c],[chdir into venv],[off])
# ARG_OPTIONAL_SINGLE([python],[p],[python version],[python3])
# ARG_HELP([source <('"$0" [-c] [-p PYTHON]')])
# ARGBASH_SET_INDENT([    ])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.10.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.dev for more info


die()
{
    local _ret="${2:-1}"
    test "${_PRINT_HELP:-no}" = yes && print_help >&2
    echo "$1" >&2
    exit "${_ret}"
}


begins_with_short_option()
{
    local first_option all_short_options='cph'
    first_option="${1:0:1}"
    test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_chdir="off"
_arg_python="python3"


print_help()
{
    printf '%s\n' "source <('\"_HELP_MSG\" [-c] [-p PYTHON]')"
    printf 'Usage: %s [-c|--(no-)chdir] [-p|--python <arg>] [-h|--help]\n' "$0"
    printf '\t%s\n' "-c, --chdir, --no-chdir: chdir into venv (off by default)"
    printf '\t%s\n' "-p, --python: python version (default: 'python3')"
    printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
    while test $# -gt 0
    do
        _key="$1"
        case "$_key" in
            -c|--no-chdir|--chdir)
                _arg_chdir="on"
                test "${1:0:5}" = "--no-" && _arg_chdir="off"
                ;;
            -c*)
                _arg_chdir="on"
                _next="${_key##-c}"
                if test -n "$_next" -a "$_next" != "$_key"
                then
                    { begins_with_short_option "$_next" && shift && set -- "-c" "-${_next}" "$@"; } || die "The short option '$_key' can't be decomposed to ${_key:0:2} and -${_key:2}, because ${_key:0:2} doesn't accept value and '-${_key:2:1}' doesn't correspond to a short option."
                fi
                ;;
            -p|--python)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_python="$2"
                shift
                ;;
            --python=*)
                _arg_python="${_key##--python=}"
                ;;
            -p*)
                _arg_python="${_key##-p}"
                ;;
            -h|--help)
                print_help
                exit 0
                ;;
            -h*)
                print_help
                exit 0
                ;;
            *)
                _PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
                ;;
        esac
        shift
    done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash
#

DIR=$(mktemp -d -t "$(basename "${0}")")
"${_arg_python:-python3}" -m venv "${DIR}"
echo source "${DIR}/bin/activate"
[ "${_arg_chdir:-off}" = on ] && echo pushd "${DIR}"

#
# ] <-- needed because of Argbash
