[alias]
    aliases = config --get-regexp "alias.*"
    amend = commit --amend
    branch-v = for-each-ref --sort=-committerdate refs/heads/ --format='%(authordate:short) %(color:red)%(objectname:short) %(color:yellow)%(refname:short)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))'
    branches = branch -a
    commits = !echo "chore, docs, feat, fix, perf, refactor, style, test"
    diff-sbs = -c delta.side-by-side=true diff
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --decorate-refs-exclude='tags/*'
    lgabs = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cD) %C(bold blue)<%an>%Creset' --abbrev-commit --decorate-refs-exclude='tags/*'
    lgt = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    lgtabs = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cD) %C(bold blue)<%an>%Creset' --abbrev-commit
    lgtmine = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --branches="maste[r]" --branches="kj" --branches="kjames"
    org-members = "!f() { gh api orgs/$1/members --paginate | jq -r '.[].login'; }; f"
    pr-pbcopy = !hub pr show -f'%U' | pbcopy
    pre-commit-init = !cp ~/.config/git/pre-commit-config.yaml $(git rev-parse --show-toplevel)/.pre-commit-config.yaml
    recent-branches = !git reflog | grep 'checkout:' | head | awk '{print $8}' | awk '!x[$0]++'
    remotes = remote -v
    sha = !git rev-parse HEAD | grep --color $(git rev-parse --short=0 HEAD)
    show-sbs = -c delta.side-by-side=true show
    stale = !git branch -r | grep -v HEAD | grep -v 'origin/master$' | xargs -I{} git log --no-merges -n 1 --format=\"%ci | %cr | %an | {}\" {} | sort -n
    tags = tag -l --sort=version:refname
    url = "!f() { echo https://$(git remote get-url origin | sed 's/^git@//' | sed 's/.git$//' | tr ':' '/')/tree/$(git rev-parse HEAD)/$1; }; f"

[advice]
    addEmptyPathspec = false
    detachedHead = false
    pushNonFastForward = false
    statusHints = false

[color]
    branch = auto
    diff = auto
    status = auto
    wtf = auto

[commit]
    gpgsign = true

[core]
    attributesfile = ~/.config/git/attributes
    editor = nvim
    excludesfile = ~/.config/git/ignore
    ignorecase = false
    # TODO: fix delta block comments!
    pager = delta
    # pager = bat

[credential]
    helper = cache --timeout=3600 --socket=~/.local/share/git/creds.sock

[diff]
    algorithm = histogram
    colorMoved = zebra
    mnemonicPrefix = true
    renames = copies
    tool = nvimdiff

[diff "pdf"]
    textconv = pdf2txt

[diff "plist"]
    textconv = plutil -convert xml1 -o -

[difftool]
    prompt = false

[difftool "nvimdiff"]
    cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""

[difftool "vimdiff"]
    cmd = "vim -d \"$LOCAL\" \"$REMOTE\""

[fetch]
    prune = true

[init]
    templatedir = ~/.config/git/template

[interactive]
    diffFilter = delta --color-only

[grep]
    patternType = perl

[merge]
    conflictstyle = zdiff3
    stat = true
    tool = nvimdiff

[mergetool "nvimdiff"]
    cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""

[mergetool "vimdiff"]
    cmd = "vim -d \"$LOCAL\" \"$REMOTE\""

[pull]
    rebase = true

[push]
    default = current
    followTags = true

[rebase]
    autoSquash = true  # https://git-scm.com/docs/git-rebase#Documentation/git-rebase.txt---autosquash
    updateRefs = false  # TODO: play with this, maybe toggle on?

[rerere]
    enabled = true

[user]
    email = KevinJames@thekev.in
    name = Kevin James
    signingKey = B2B0BD2FE4EE84C5

[web]
    browser = firefox

[delta]
    navigate = true

[hub]
    protocol = ssh

[includeIf "gitdir:~/src/talkiq/"]
    path = ~/.config/git/config-talkiq

[includeIf "gitdir:~/src/dialpad/"]
    path = ~/.config/git/config-dialpad
