#!/usr/bin/env python3
import atexit
import os
import pathlib
import readline
import rlcompleter
import sys
import traceback


XDG_STATE_HOME = pathlib.Path(
    os.environ.get(
        'XDG_STATE_HOME',
        pathlib.Path.home() / '.local' / 'state',
    ),
)
HISTORY = XDG_STATE_HOME / f'python{sys.version_info[0]}' / 'history'

# Load
HISTORY.touch()
readline.set_history_length(10000)
try:
    readline.read_history_file(HISTORY)
except Exception:
    print('Error reading history:')
    traceback.print_exc()

# Enable tab-completion
readline.parse_and_bind('tab: complete')


def save_history(history_path: pathlib.Path = HISTORY) -> None:
    # N.B. `save_history` is run outside of the context of this file.
    # pylint: disable=redefined-outer-name,reimported,import-outside-toplevel
    import readline
    readline.write_history_file(history_path)


atexit.register(save_history)

# Remove from namespace
del atexit, os, readline, rlcompleter, sys
del HISTORY, XDG_STATE_HOME
del save_history
