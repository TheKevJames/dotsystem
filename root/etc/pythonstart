#!/usr/bin/env python
import atexit
import os
import readline
import rlcompleter
import sys


XDG_DATA_HOME = os.environ.get(
    'XDG_DATA_HOME',
    os.path.expanduser(os.path.join('~', '.local', 'share')))
# pylint: disable=consider-using-f-string
HISTORY = os.path.join(XDG_DATA_HOME, 'python{}'.format(sys.version_info[0]),
                       'history')

# Load
readline.set_history_length(10000)
if os.path.exists(HISTORY):
    try:
        readline.read_history_file(HISTORY)
    except IOError:
        # Py2 on OSX now "requires" gnureadline static linked to readline. If
        # you don't have that, this IOError gets thrown. But it does all the
        # work before the exception gets thrown and works perfectly fine, so...
        pass

# Enable tab-completion
readline.parse_and_bind('tab: complete')


def save_history(history_path=HISTORY):
    # N.B. `save_history` is run outside of the context of this file.
    # pylint: disable=redefined-outer-name,reimported,import-outside-toplevel
    import readline
    readline.write_history_file(history_path)


atexit.register(save_history)

# Remove from namespace
del atexit, os, readline, rlcompleter, sys
del HISTORY, XDG_DATA_HOME
del save_history
